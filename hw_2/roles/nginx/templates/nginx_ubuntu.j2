user www-data;

worker_processes auto;

pid /run/nginx.pid;

worker_rlimit_nofile 10240;

events {
  
    use epoll;
  
    worker_connections 2048;
 
    multi_accept on;
}

http {


  
    server_tokens off;

   
    sendfile on;

    
    tcp_nopush on;

    tcp_nodelay off;
    
    send_timeout 30;

    
    keepalive_timeout 60;

    keepalive_requests 200;
    # client_header_timeout 20;
    # client_body_timeout 20;
    reset_timedout_connection on;
    
    types_hash_max_size 2048;

    server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    # default_type application/octet-stream;
    default_type text/html;
    charset UTF-8;

 

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;


   
    gzip on;

    # This should be turned on if pre-compressed copies (.gz) of static files exist
    # If NOT it should be left off as it will cause extra I/O
    # default: off
    # gzip_static on;

    # Do NOT compress anything smaller than 256 bytes
    gzip_min_length 256;

    # Fuck IE6
    gzip_disable "msie6";

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (rare)
    # would display gibberish if their proxy gave them the gzipped version.
    # gzip_vary on;

    # Compress data even for clients that are connecting via proxies
    # Identified by the "Via" header
    gzip_proxied any;

    # Compression level (1-9)
    # 5 is the perfect compromise between size and CPU usage
    gzip_comp_level 5;
    
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        application/json
        application/x-javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;


    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}

